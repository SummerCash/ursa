(module
  (type $t0 (func (param f32) (result i32)))
  (type $t1 (func (param f64) (result i32)))
  (type $t2 (func (result i32)))
  (type $t3 (func (result i64)))
  (type $t4 (func (result f32)))
  (type $t5 (func (result f64)))
  (func $f0 (type $t0) (param $p0 f32) (result i32)
    get_local $p0
    get_local $p0
    f32.ne)
  (func $f1 (type $t1) (param $p0 f64) (result i32)
    get_local $p0
    get_local $p0
    f64.ne)
  (func $i32_eqz_100 (type $t2) (result i32)
    i32.const 100
    i32.eqz)
  (func $i32_eqz_0 (type $t2) (result i32)
    i32.const 0
    i32.eqz)
  (func $i32_clz (type $t2) (result i32)
    i32.const 128
    i32.clz)
  (func $i32_ctz (type $t2) (result i32)
    i32.const 128
    i32.ctz)
  (func $i32_popcnt (type $t2) (result i32)
    i32.const 128
    i32.popcnt)
  (func $i64_eqz_100 (type $t2) (result i32)
    i64.const 100
    i64.eqz)
  (func $i64_eqz_0 (type $t2) (result i32)
    i64.const 0
    i64.eqz)
  (func $i64_clz (type $t3) (result i64)
    i64.const 128
    i64.clz)
  (func $i64_ctz (type $t3) (result i64)
    i64.const 128
    i64.ctz)
  (func $i64_popcnt (type $t3) (result i64)
    i64.const 128
    i64.popcnt)
  (func $f32_neg (type $t4) (result f32)
    f32.const 0x1.9p+6 (;=100;)
    f32.neg)
  (func $f32_abs (type $t4) (result f32)
    f32.const -0x1.9p+6 (;=-100;)
    f32.abs)
  (func $f32_sqrt_neg_is_nan (type $t2) (result i32)
    f32.const -0x1.9p+6 (;=-100;)
    f32.sqrt
    call $f0)
  (func $f32_sqrt_100 (type $t4) (result f32)
    f32.const 0x1.9p+6 (;=100;)
    f32.sqrt)
  (func $f32_ceil (type $t4) (result f32)
    f32.const -0x1.8p-1 (;=-0.75;)
    f32.ceil)
  (func $f32_floor (type $t4) (result f32)
    f32.const -0x1.8p-1 (;=-0.75;)
    f32.floor)
  (func $f32_trunc (type $t4) (result f32)
    f32.const -0x1.8p-1 (;=-0.75;)
    f32.trunc)
  (func $f32_nearest_lo (type $t4) (result f32)
    f32.const 0x1.4p+0 (;=1.25;)
    f32.nearest)
  (func $f32_nearest_hi (type $t4) (result f32)
    f32.const 0x1.cp+0 (;=1.75;)
    f32.nearest)
  (func $f64_neg (type $t5) (result f64)
    f64.const 0x1.9p+6 (;=100;)
    f64.neg)
  (func $f64_abs (type $t5) (result f64)
    f64.const -0x1.9p+6 (;=-100;)
    f64.abs)
  (func $f64_sqrt_neg_is_nan (type $t2) (result i32)
    f64.const -0x1.9p+6 (;=-100;)
    f64.sqrt
    call $f1)
  (func $f64_sqrt_100 (type $t5) (result f64)
    f64.const 0x1.9p+6 (;=100;)
    f64.sqrt)
  (func $f64_ceil (type $t5) (result f64)
    f64.const -0x1.8p-1 (;=-0.75;)
    f64.ceil)
  (func $f64_floor (type $t5) (result f64)
    f64.const -0x1.8p-1 (;=-0.75;)
    f64.floor)
  (func $f64_trunc (type $t5) (result f64)
    f64.const -0x1.8p-1 (;=-0.75;)
    f64.trunc)
  (func $f64_nearest_lo (type $t5) (result f64)
    f64.const 0x1.4p+0 (;=1.25;)
    f64.nearest)
  (func $f64_nearest_hi (type $t5) (result f64)
    f64.const 0x1.cp+0 (;=1.75;)
    f64.nearest)
  (export "i32_eqz_100" (func $i32_eqz_100))
  (export "i32_eqz_0" (func $i32_eqz_0))
  (export "i32_clz" (func $i32_clz))
  (export "i32_ctz" (func $i32_ctz))
  (export "i32_popcnt" (func $i32_popcnt))
  (export "i64_eqz_100" (func $i64_eqz_100))
  (export "i64_eqz_0" (func $i64_eqz_0))
  (export "i64_clz" (func $i64_clz))
  (export "i64_ctz" (func $i64_ctz))
  (export "i64_popcnt" (func $i64_popcnt))
  (export "f32_neg" (func $f32_neg))
  (export "f32_abs" (func $f32_abs))
  (export "f32_sqrt_neg_is_nan" (func $f32_sqrt_neg_is_nan))
  (export "f32_sqrt_100" (func $f32_sqrt_100))
  (export "f32_ceil" (func $f32_ceil))
  (export "f32_floor" (func $f32_floor))
  (export "f32_trunc" (func $f32_trunc))
  (export "f32_nearest_lo" (func $f32_nearest_lo))
  (export "f32_nearest_hi" (func $f32_nearest_hi))
  (export "f64_neg" (func $f64_neg))
  (export "f64_abs" (func $f64_abs))
  (export "f64_sqrt_neg_is_nan" (func $f64_sqrt_neg_is_nan))
  (export "f64_sqrt_100" (func $f64_sqrt_100))
  (export "f64_ceil" (func $f64_ceil))
  (export "f64_floor" (func $f64_floor))
  (export "f64_trunc" (func $f64_trunc))
  (export "f64_nearest_lo" (func $f64_nearest_lo))
  (export "f64_nearest_hi" (func $f64_nearest_hi)))
